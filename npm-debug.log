0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish', '.' ]
2 info using npm@2.14.9
3 info using node@v5.3.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/cloud/work/cloud/gulpman',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/cloud/.npm/gulpman/1.2.9/package.tgz not in flight; packing
9 info lifecycle gulpman@1.2.9~prepublish: gulpman@1.2.9
10 silly lifecycle gulpman@1.2.9~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/Users/cloud/.npm/gulpman/1.2.9/package.tgz',
11 verbose tar pack   '/Users/cloud/work/cloud/gulpman' ]
12 verbose tarball /Users/cloud/.npm/gulpman/1.2.9/package.tgz
13 verbose folder /Users/cloud/work/cloud/gulpman
14 verbose addLocalTarball adding from inside cache /Users/cloud/.npm/gulpman/1.2.9/package.tgz
15 silly cache afterAdd gulpman@1.2.9
16 verbose afterAdd /Users/cloud/.npm/gulpman/1.2.9/package/package.json not in flight; writing
17 verbose afterAdd /Users/cloud/.npm/gulpman/1.2.9/package/package.json written
18 silly publish { name: 'gulpman',
18 silly publish   version: '1.2.9',
18 silly publish   description: 'Create Modular Front-End Build System, based on gulp ,easy useage',
18 silly publish   engines: { node: '>=4.2.0' },
18 silly publish   main: 'index.js',
18 silly publish   scripts: { postinstall: 'sh scripts/install.sh', test: 'make test' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/xunuoi/gulpman.git' },
18 silly publish   keywords:
18 silly publish    [ 'gulp',
18 silly publish      'modular',
18 silly publish      'gulpman',
18 silly publish      'scss',
18 silly publish      'es6',
18 silly publish      'build',
18 silly publish      'easy',
18 silly publish      'fis',
18 silly publish      'component' ],
18 silly publish   author: { name: 'Lucas X' },
18 silly publish   license: 'MIT',
18 silly publish   bugs: { url: 'https://github.com/xunuoi/gulpman/issues' },
18 silly publish   homepage: 'https://github.com/xunuoi/gulpman#readme',
18 silly publish   devDependencies: { gulp: '^3.9.0', 'gulp-sass': '^2.0.4' },
18 silly publish   dependencies:
18 silly publish    { through2: '^2.0.0',
18 silly publish      'babel-core': '^6.4.0',
18 silly publish      'babel-preset-es2015': '^6.3.13',
18 silly publish      browserify: '^11.2.0',
18 silly publish      'event-stream': '^3.3.2',
18 silly publish      'object-assign': '^4.0.1',
18 silly publish      globby: '^2.1.0',
18 silly publish      'gulp-babel': '^5.3.0',
18 silly publish      'gulp-imagemin': '^2.3.0',
18 silly publish      'gulp-load-plugins': '^1.0.0-rc.1',
18 silly publish      'gulp-cssnano': '^2.1.0',
18 silly publish      'gulp-rename': '^1.2.2',
18 silly publish      'gulp-rev-all': '^0.8.22',
18 silly publish      'gulp-rev-replace': '^0.4.3',
18 silly publish      'gulp-sequence': '^0.4.4',
18 silly publish      'gulp-uglify': '^1.2.0',
18 silly publish      'imagemin-pngquant': '^4.1.2',
18 silly publish      shelljs: '^0.5.3',
18 silly publish      'vinyl-buffer': '^1.0.0',
18 silly publish      'vinyl-source-stream': '^1.1.0' },
18 silly publish   readme: '\n[![Coverage Status](https://raw.githubusercontent.com/xunuoi/gulpman/master/assets/logo.png)](https://thinkjs.org/)\n\n-----\n\n[![NPM version](https://img.shields.io/npm/v/gulpman.svg?style=flat-square)](http://badge.fury.io/js/gulpman)\n[![Build status](https://raw.githubusercontent.com/xunuoi/gulpman/master/assets/build.png?style=flat-square)](http://badge.fury.io/js/gulpman)\n[![Coverage Status](https://raw.githubusercontent.com/xunuoi/gulpman/master/assets/coverage.png?style=flat-square)](http://badge.fury.io/js/gulpman)\n\n\n# gulpman\n\n- Create Modular Front-End Build System, based on gulp , more light and easier than FIS!\n- 基于gulp的前端模块化解决方案，比百度FIS更简单、灵活、可控性高，会gulp就会定制自己的方案\n- 集成`SCSS|ES6|Babel|Browserify|cssnano|uglify|imagmein`等常用组件，做到一站式自动化解决方案，同时清晰、可控，定制、修改都超简单\n- 扩展性高，gulp现有的插件都可以拼装、加入到gulpman中使用，你可以自己根据实际情况组合、修改，比如可以轻松整合browser-sync到构建系统中。\n\n\n\n###Introduction 说明\n- 支持Mac、Linux环境下安装、使用\n- Windows环境未做测试，由于安装脚本使用到shell，windows不支持sh，可能需要手动安装`gulp-sass`等模块\n- Node版本需要不低于4.2.0，如果要兼容0.1x的旧版本nodejs，直接修改源码`index.js`中的语法即可，修改为ES5语法就能正常使用\n\n\n###Install 安装\ncd into your project dir and install:\n\n`npm install gulpman --save-dev`\n\n\n\n\n###Usage 使用\n\n\n####In Your Gulpfile:\n\n- 只需要require gulpman模块，就会自动加载`gm:publish`, `gm:develop`（开发监视模式）等task到环境中\n- 使用时在命令行中直接输入`gulp gm:publish`即可执行gulpman预置的任务\n\n\n```Javascript\n/**\n * Gulpfile.js\n */\n\n\nvar gulp = require(\'gulp\'),\n    gman = require(\'gulpman\')\n\n// your other tasks ...你的其他task\n// xxx ...\n\n\n/**\n * 配置gulpman ======================\n * Use config API\n * 设置路径、CDN、资源URL前缀等，API超级简单\n */\n\ngman.config({\n    \n    // 是否使用绝对路径，默认true,推荐使用，方便服务器配置。比如`/static/home/main.js`这种风格。\n    // 如果is_absolute是false, 那么可能是`../../assets/static/home/main.js`这种风格。\n    // 具体取决于项目情况、服务端配置等。\n    // if set the assets url prefix as absolute or relative, default: true\n    \'is_absolute\': true,\n\n    // cdn prefix 配置CDN\n    \'cdn_prefix\': \'\', \n\n    // 配置资源URL前缀，建议 /xxx这种\n    // usually set as /static, this involves the server config ,such as the static path of nginx\n    \'url_prefix\': \'/static\' \n\n\n    // 模块COMPONENTS目录，同一个模块的html和资源文件在一起。默认 \'components\'即可\n    \'components\': \'components\',\n\n    // develop和publish下的views目录，跟服务端框架的views目录配置一致，比如express\n    \'runtime_views\': \'views\',\n    \'dist_views\': \'views_dist\',\n\n    // develop和publish下的assets静态目录，跟服务器配置有关，比如nginx的static目录指向\n    \'runtime_assets\': \'assets\',\n    \'dist_assets\': \'assets_dist\',\n\n    // 第三方JS类库、模块的目录，推荐设置为`lib`或`bower_components`（这样bower可以直接安装到这个目录）\n    // 这个目录默认打包时为全局模块目录，可以直接`require(\'xxx\')`，而不用加相对路径\n    // the js library dir, set as a global module. Also you can set as bower_components\n    \'lib\': \'lib\', \n\n    // 可以添加一个自定的全局模块目录，该目录下的js模块，也作为全局模块来require，不需要相对路径。\n    // the global module dir\n    \'global\': \'common\' \n})\n\n```\n\n\n####CLI 执行Task:\n\n```Shell\n\n# 初始化目录，建立components目录并添加一份html的demo文件\n# init components dir and a html demo\ngulp gm:init\n\n# publish 发布资源，包括合并、压缩资源、rev产生MD5等\ngulp gm:publish\n\n# develop and watch 开发模式，监视相关文件变动，增量更新\ngulp gm:develop\n\n# clean 清理构建输出的目录和文件\ngulp gm:clean\n\n# 编译输出一份运行时资源文件，但是不进入监视状态\n# compile for develop, not watch\ngulp gm:compile\n\n\n```\n\n\n####目录说明\n\n* 使用gulpman按照模块划分后，模块根目录可以是`./components`(默认，可配置)，如果你有个模块是foo，那么应该有如下目录：`./components/foo`，然后跟foo模块相关的`html|js|css|fonts|image`等资源文件都放到`foo`下，这个结构下，做开发时非常清晰、高效，便于模块组织、资源定位等。\n* 通过`gm:publish`命令构建后，会自动生成模板`views`目录，和静态资源`assets`目录。\n\n\n\n####什么是全局模块目录：\n\n- gulpman.config的配置中，lib和global都是全局模块目录。举个例子说明：你的`components/lib`目录下有一个模块 `foo.js`，就是: `components/lib/foo.js`，那么你在你的es6文件中，就可以这样使用：`import foo from \'foo\'`，不需要写成 `import foo from \'../lib/foo\'`\n- 同理`global`那个配置也是这样的，推荐将lib目录设置成跟`bower`一致的，全部来存放第三方类库，而`global`设置的目录，比如叫`common`，可以存放自己的`公用模块`。这样开发会更加灵活、方便。\n- 注意全局模块不要有同名冲突。\n\n\n\n\n###Any Question\n\n- 如有问题，请联系我：\n- xunuoi@163.com\n- xwlxyjk@gmail.com\n\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '7ce3d20f4976e024e330ae22d27689207216eddf',
18 silly publish   _id: 'gulpman@1.2.9',
18 silly publish   _shasum: 'd6a4cd8bc6dc2d6a550f9db6db0a31e6fc89c3bd',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name gulpman
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/gulpman
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/cloud/.npm/gulpman/1.2.9/package.tgz
26 verbose request uri https://registry.npmjs.org/gulpman
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 16:52:52
29 verbose request using bearer token for auth
30 verbose request id 99d6a2e84e17151b
31 http request PUT https://registry.npmjs.org/gulpman
32 http 403 https://registry.npmjs.org/gulpman
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=300',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Mon, 25 Jan 2016 08:52:53 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-itm7426-ITM',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1453711972.993865,VS0,VE830' }
34 verbose request invalidating /Users/cloud/.npm/registry.npmjs.org/gulpman on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 1.2.9." : gulpman
36 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
36 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
36 verbose stack     at emitTwo (events.js:87:13)
36 verbose stack     at Request.emit (events.js:172:7)
36 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1082:10)
36 verbose stack     at emitOne (events.js:82:20)
36 verbose stack     at Request.emit (events.js:169:7)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
37 verbose statusCode 403
38 verbose pkgid gulpman
39 verbose cwd /Users/cloud/work/cloud/gulpman
40 error Darwin 14.5.0
41 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish" "."
42 error node v5.3.0
43 error npm  v2.14.9
44 error code E403
45 error "You cannot publish over the previously published version 1.2.9." : gulpman
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
